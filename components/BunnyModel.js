/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useThree, useFrame } from "@react-three/fiber";

export default function Model(props) {
  const mesh = useRef();
  const { nodes, materials } = useGLTF("/bunny-baked2.glb");
  const { viewport } = useThree();
  const [hover, setHover] = useState(false);

  useFrame((state, delta) => {
    const time = state.clock.getElapsedTime();
    mesh.current.rotation.z -= Math.sin(time * 3) * (hover ? 0.005 : 0);
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={mesh}
        castShadow
        receiveShadow
        geometry={nodes.Bunny_Scene.geometry}
        material={materials.palette}
        rotation={[Math.PI / 2, 0, 0]}
        position={[0, -1.5, 1]}
        scale={viewport.width / 6}
        onPointerOver={(e) => setHover(true)}
        onPointerLeave={(e) => {
          setHover(false);
          mesh.current.rotation.z = 0;
        }}
      />
    </group>
  );
}

useGLTF.preload("/bunny-baked2.glb");
